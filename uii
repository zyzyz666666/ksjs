"ui";
importClass(java.net.HttpURLConnection);
importClass(java.net.URL);
importClass(java.io.File);
importClass(java.io.FileOutputStream);
importClass(android.graphics.Color);

//++++++++++++++++++++++++++++++++++++++++++++++++++
//首页配置

var color = "#2E8B57"

ui.statusBarColor("#2E8B57")
ui.layout(
    <drawer id="drawer">
        <vertical>
            <appbar>
                <toolbar id="toolbar" bg="#2E8B57" title="KS小帮手" />
                <tabs id="tabs" bg="#2E8B57" />
            </appbar>
            <viewpager id="viewpager" >
                <frame>

                    <vertical>
                        <vertical gravity="center" layout_weight="1">
                            <card w="*" h="70" margin="10 5" cardCornerRadius="200dp" cardElevation="100dp" foreground="?selectableItemBackground">
                                <horizontal gravity="center_vertical">
                                    <vertical padding="10 8" h="auto" w="0" layout_weight="1">
                                        <img src="https://s2-10623.kwimgs.com/kos/nlav10623/vision_images/topBannerx1.png" />
                                    </vertical>
                                </horizontal>
                            </card>

                            <card w="*" h="70" margin="10 5" cardCornerRadius="200dp" cardElevation="100dp" foreground="?selectableItemBackground">
                                <horizontal gravity="center_vertical">
                                    <vertical padding="10 8" h="auto" w="0" layout_weight="1">
                                        <text text="   KS选择" textColor="#222222" textSize="18sp" maxLines="1" />
                                        <text text="   设置配置内容" textColor="#999999" textSize="15sp" maxLines="1" />
                                    </vertical>
                                    <spinner id="script_chosen" marginLeft="10" marginRight="10" entries="互切|快手极速帮|快手" />
                                </horizontal>
                            </card>
                            <card w="*" h="70" margin="10 5" cardCornerRadius="200dp" cardElevation="100dp" foreground="?selectableItemBackground">
                                <horizontal gravity="center_vertical">
                                    <vertical padding="10 8" h="auto" w="0" layout_weight="1">
                                        <text text="   无障碍服务" textColor="#222222" textSize="18sp" maxLines="1" />
                                        <text text="    确保开启" textColor="#999999" textSize="15sp" maxLines="1" />
                                    </vertical>
                                    <Switch id="autoService" marginLeft="10" marginRight="20" checked="{{auto.service != null}}" />
                                </horizontal>
                            </card>
                            <card w="*" h="70" margin="10 5" cardCornerRadius="200dp" cardElevation="100dp" foreground="?selectableItemBackground">
                                <horizontal gravity="center_vertical">
                                    <vertical padding="10 8" h="auto" w="0" layout_weight="1">
                                        <text text="   悬浮窗权限" textColor="#222222" textSize="18sp" maxLines="1" />
                                        <text text="    确保开启" textColor="#999999" textSize="15sp" maxLines="1" />
                                    </vertical>
                                    <Switch id="consoleshow" marginLeft="10" marginRight="20" checked="{{floaty.checkPermission()}}" />
                                </horizontal>
                            </card>
                            <card w="*" h="70" margin="10 5" cardCornerRadius="5000dp" cardElevation="1000p" foreground="?selectableItemBackground">
                                <horizontal gravity="center_vertical">
                                    <vertical padding="10 8" h="auto" w="0" layout_weight="1">
                                        <text text="               按下音量上键可以停止KS" textColor="#222222" textSize="18sp" maxLines="1" />
                                    </vertical>
                                </horizontal>
                            </card>
                            <horizontal gravity="center_vertical">
                                <vertical padding="10 8" h="auto" w="0" layout_weight="1">
                                    <text text="Q2254464797" textColor="#222222" textSize="15sp" maxLines="1" />
                                    <linear>
                                        <button text="快手 脚本下载" id="downks" />
                                        <text id="ksyes" text="已下载✅" />
                                        <text id="ksno" text="未下载❌" />
                                        <button text="刷新" id="downksf5" />
                                        <button text="卸载" id="deleteks" />
                                    </linear>
                                    <linear>
                                        <button text="快手极速 脚本下载" id="downksjs" />
                                        <text id="ksjsyes" text="已下载✅" />
                                        <text id="ksjsno" text="未下载❌" />
                                        <button text="刷新" id="downksjsf5" />
                                        <button text="卸载" id="deleteksjs" />
                                    </linear>
                                    <linear>
                                        <button text="互切 脚本下载" id="downtime" />
                                        <text id="timeyes" text="已下载✅" />
                                        <text id="timeno" text="未下载❌" />
                                        <button text="刷新" id="downtimef5" />
                                        <button text="卸载" id="deletetime" />
                                    </linear>
                                </vertical>
                            </horizontal>

                        </vertical>
                        <button id="start" text="开 始 KS" textSize="25sp" color="#ffffff" bg="#2E8B57" foreground="?selectableItemBackground" />
                        <horizontal w="*" h="1sp" margin="0 10 0 0" bg='#E2E2E2'></horizontal>     //透明条
                        <button id="exit" text="退  出" textSize="25sp" color="#ffffff" bg="#2E8B57" foreground="?selectableItemBackground" />
                    </vertical>
                </frame>
                <ScrollView>
                    <frame>
                        <vertical id="快手set" gravity="center">

                            <ScrollView>
                                <vertical>
                                    <linear>
                                        <checkbox id="选择框_切换账号" text="切换账号:" textColor="black" textStyle="bold" checked='false' />
                                        <input id="输入框分钟" text="60" hint="请输分钟" /><text textSize="16sp" textColor="black" text="分钟" />
                                    </linear>

                                    <linear>
                                        <text textSize="16sp" textColor="black" text="滑动间隔(秒):" /> <input id="输入框1" text="6" hint="请输秒" />
                                        <text textSize="16sp" textColor="black" text=" ~ " /> <input id="输入框11" text="10" hint="请输秒" />
                                    </linear>
                                    <linear>
                                        <text textSize="16sp" textColor="black" text="强制返回(分钟):" /> <input id="输入框3" text="10" hint="请输分钟" />
                                    </linear>
                                    <linear>
                                        <text textSize="16sp" textColor="black" text="速度调节:" /> <input id="输入框速度调节" text="1.8" hint="数值" />
                                        <text textSize="16sp" textColor="black" text=" 数值越小速度越快(最低不低于1.2) " />
                                    </linear>
                                    <linear>
                                        <checkbox id="选择框_悬赏任务" text="悬赏任务" textColor="black" textStyle="bold" checked='true' />
                                        <checkbox id="选择框_逛街任务" text="逛街任务" textColor="black" textStyle="bold" checked='true' />
                                        <checkbox id="选择框_点赞任务" text="点赞任务" textColor="black" textStyle="bold" checked='true' />
                                    </linear>
                                    <linear>
                                        <checkbox id="选择框_评论任务" text="评论任务" textColor="black" textStyle="bold" checked='fales' />
                                        <checkbox id="选择框_看视频任务" text="看视频任务" textColor="black" textStyle="bold" checked='true' />
                                    </linear>
                                    <text textSize="16sp" textColor="black" text="本软件用于替人工完成收到操作，请勿用于非法用途,**启动脚本前请打开该应用无障碍**" />
                                </vertical>
                            </ScrollView>
                            <linear>
                                <button text="保存 快手 脚本" id="saveks" textSize="18" />
                            </linear>
                        </vertical>


                        <vertical id="快手极速set" gravity="center">
                            <ScrollView>
                                <vertical>
                                    <linear>
                                        <text textSize="16sp" textColor="black" text="滑动间隔(秒)[此输入框不可输入]:" /> <input id="输入框1" text="6" hint="请输秒" inputType="none" />
                                    </linear>
                                    <linear>
                                        <text textSize="16sp" textColor="black" text="自动重启(分钟)[此输入框不可输入]:" /> <input id="输入框3" text="16" hint="请输分钟" inputType="none" />
                                    </linear>
                                    <linear>
                                        <checkbox id="选择框_自检测" text="*必选*自检测" textColor="black" textStyle="bold" checked='true' />
                                        <checkbox id="选择框_开宝箱" text="开宝箱" textColor="black" textStyle="bold" checked='true' />
                                        <checkbox id="选择框_每日挑战" text="每日挑战" textColor="black" textStyle="bold" checked='true' />
                                    </linear>
                                    <linear>
                                        <checkbox id="选择框_饭饭补贴" text="饭饭补贴" textColor="black" textStyle="bold" checked='true' />
                                        <checkbox id="选择框_奖励翻倍" text="奖励翻倍" textColor="black" textStyle="bold" checked='true' />
                                        <checkbox id="选择框_看视频赚金币" text="看视频赚金币" textColor="black" textStyle="bold" checked='true' />
                                    </linear>
                                    <linear>
                                        <checkbox id="选择框_逛街" text="逛街" textColor="black" textStyle="bold" checked='true' />
                                        <checkbox id="选择框_表态" text="表态" textColor="black" textStyle="bold" checked='true' />
                                    </linear>
                                    <text textSize="16sp" textColor="black" text="本软件用于替人工完成收到操作，请勿用于非法用途,**启动脚本前请打开该应用无障碍**" />
                                </vertical>
                            </ScrollView>
                            <linear>
                                <button text="保存 快手极速 脚本" id="saveksjs" textSize="18" />
                            </linear>
                        </vertical>

                        <vertical id="互切set" gravity="center">
                            <ScrollView>
                                <vertical>
                                    <linear>
                                        <text textSize="16sp" textColor="black" text="互切间隔(分钟):" /><input id="输入框互切" text="60" hint="请输分钟" /><text textSize="16sp" textColor="black" text="分钟" />
                                    </linear>
                                    <text textSize="16sp" textColor="black" text="本软件用于替人工完成收到操作，请勿用于非法用途,**启动脚本前请打开该应用无障碍**" />
                                </vertical>
                            </ScrollView>
                            <linear>
                                <button text="保存 互切时间" id="savetime" textSize="18" />
                            </linear>
                        </vertical>
                    </frame>
                </ScrollView>
            </viewpager >
        </vertical >
    </drawer >
);

// 设置文本元素可见
ui.ksyes.setVisibility(android.view.View.INVISIBLE);
ui.ksjsyes.setVisibility(android.view.View.INVISIBLE);
ui.timeyes.setVisibility(android.view.View.INVISIBLE);

// 设置文本元素不可见
ui.ksno.setVisibility(android.view.View.VISIBLE);
ui.ksjsno.setVisibility(android.view.View.VISIBLE);
ui.timeno.setVisibility(android.view.View.VISIBLE);


// 创建选项菜单(右上角)
ui.emitter.on("create_options_menu", menu => {
    menu.add("日志");
    menu.add("关于");
});

// 监听选项菜单点击
ui.emitter.on("options_item_selected", (e, item) => {
    switch (item.getTitle()) {
        case "日志":
            app.startActivity("console");
            break;
        case "关于":
            alert("关于", "KS小帮手 v1.0.0");
            break;
    }
    e.consumed = true;
});
activity.setSupportActionBar(ui.toolbar);

// 设置滑动页面的标题
ui.viewpager.setTitles(["首页", "KS Setting"]);
// 让滑动页面和标签栏联动
ui.tabs.setupWithViewPager(ui.viewpager);

var script_chosen_Listener = new android.widget.AdapterView.OnItemSelectedListener({
    onItemSelected: function (parent, view, position, id) {
        toastLog('选择脚本：' + ui.script_chosen.getSelectedItem());
        if (ui.script_chosen.getSelectedItemPosition() == 2) {
            ui.快手set.visibility = 0;
            ui.快手极速set.visibility = 8;
            ui.互切set.visibility = 8;

        }
        else if (ui.script_chosen.getSelectedItemPosition() == 1) {
            ui.快手set.visibility = 8;
            ui.快手极速set.visibility = 0;
            ui.互切set.visibility = 8;

        } else if (ui.script_chosen.getSelectedItemPosition() == 0) {
            ui.快手set.visibility = 8;
            ui.快手极速set.visibility = 8;
            ui.互切set.visibility = 0;

        }
        //GLOBAL_CONFIG.put("script_chosen", ui.script_chosen.getSelectedItemPosition());
    }
})
ui.script_chosen.setOnItemSelectedListener(script_chosen_Listener);

////////////////////
var ksjsset = storages.create("ksjsset");
var ksset = storages.create("ksset");
var timeset = storages.create("timeset");
///////////////////////////////////保存

ui.saveksjs.click(function () {
    ksjsset.put("选择框_开宝箱", ui.选择框_开宝箱.isChecked());
    ksjsset.put("选择框_每日挑战", ui.选择框_每日挑战.isChecked());
    ksjsset.put("选择框_饭饭补贴", ui.选择框_饭饭补贴.isChecked());
    ksjsset.put("选择框_奖励翻倍", ui.选择框_奖励翻倍.isChecked());
    ksjsset.put("选择框_看视频赚金币", ui.选择框_看视频赚金币.isChecked());
    ksjsset.put("选择框_逛街", ui.选择框_逛街.isChecked());
    ksjsset.put("选择框_表态", ui.选择框_表态.isChecked());
    //ksjsset.put("选择框_自检测", ui.选择框_自检测.isChecked());
    Initialize();
    toastLog("快手极速 脚本设置 保存成功！");
});

///////////////////////////
ui.saveks.click(function () {
    ksset.put("选择框_切换账号", ui.选择框_切换账号.isChecked());
    ksset.put("输入框分钟", ui.输入框分钟.text());
    ksset.put("输入框1", ui.输入框1.text());
    ksset.put("输入框11", ui.输入框11.text());
    ksset.put("输入框3", ui.输入框3.text());
    ksset.put("输入框速度调节", ui.输入框速度调节.text());
    ksset.put("选择框_悬赏任务", ui.选择框_悬赏任务.isChecked());
    ksset.put("选择框_逛街任务", ui.选择框_逛街任务.isChecked());
    ksset.put("选择框_点赞任务", ui.选择框_点赞任务.isChecked());
    ksset.put("选择框_评论任务", ui.选择框_评论任务.isChecked());
    ksset.put("选择框_看视频任务", ui.选择框_看视频任务.isChecked());
    //ksjsset.put("选择框_自检测", ui.选择框_自检测.isChecked());
    Initialize();
    toastLog("快手 脚本设置 保存成功！");
});
/////////////////////////////////////////
ui.savetime.click(function () {
    timeset.put("输入框互切", ui.输入框互切.text());
    //
    Initialize();
    toastLog("互切 时间设置 保存成功！");
});
// 保存脚本设置
// ui.saveks.click(function () {
//     cmCONFIG0.put("ad_randomsetting", ui.ad_randomsetting.getText() + "");
//     toastLog("快手 脚本设置 保存成功！");
// });



// 读取脚本设置
function Initialize() {
    if (ksjsset.get("选择框_开宝箱") != null) { ui.选择框_开宝箱.setChecked(ksjsset.get("选择框_开宝箱")) }
    if (ksjsset.get("选择框_每日挑战") != null) { ui.选择框_开宝箱.setChecked(ksjsset.get("选择框_每日挑战")) }
    if (ksjsset.get("选择框_饭饭补贴") != null) { ui.选择框_开宝箱.setChecked(ksjsset.get("选择框_饭饭补贴")) }
    if (ksjsset.get("选择框_奖励翻倍") != null) { ui.选择框_开宝箱.setChecked(ksjsset.get("选择框_奖励翻倍")) }
    if (ksjsset.get("选择框_看视频赚金币") != null) { ui.选择框_开宝箱.setChecked(ksjsset.get("选择框_看视频赚金币")) }
    if (ksjsset.get("选择框_逛街") != null) { ui.选择框_开宝箱.setChecked(ksjsset.get("选择框_逛街")) }
    if (ksjsset.get("选择框_表态") != null) { ui.选择框_开宝箱.setChecked(ksjsset.get("选择框_表态")) }


    if (ksset.get("选择框_切换账号") != null) { ui.选择框_切换账号.setChecked(ksset.get("选择框_切换账号")) }
    if (ksset.get("输入框分钟") != undefined) { ui.输入框分钟.setText(ksset.get("输入框分钟")) }
    if (ksset.get("输入框1") != undefined) { ui.输入框1.setText(ksset.get("输入框1")) }
    if (ksset.get("输入框11") != undefined) { ui.输入框11.setText(ksset.get("输入框11")) }
    if (ksset.get("输入框3") != undefined) { ui.输入框3.setText(ksset.get("输入框3")) }
    if (ksset.get("输入框速度调节") != undefined) { ui.输入框速度调节.setText(ksset.get("输入框速度调节")) }
    if (ksset.get("选择框_悬赏任务") != null) { ui.选择框_悬赏任务.setChecked(ksset.get("选择框_悬赏任务")) }
    if (ksset.get("选择框_逛街任务") != null) { ui.选择框_逛街任务.setChecked(ksset.get("选择框_逛街任务")) }
    if (ksset.get("选择框_点赞任务") != null) { ui.选择框_点赞任务.setChecked(ksset.get("选择框_点赞任务")) }
    if (ksset.get("选择框_评论任务") != null) { ui.选择框_评论任务.setChecked(ksset.get("选择框_评论任务")) }
    if (ksset.get("选择框_看视频任务") != null) { ui.选择框_看视频任务.setChecked(ksset.get("选择框_看视频任务")) }


    if (timeset.get("输入框互切") != undefined) { ui.输入框互切.setText(timeset.get("输入框互切")) }
};










//***************************************************************** */

// 用户勾选无障碍服务的选项时，跳转到页面让用户去开启 
// android.permission.SYSTEM_ALERT_WINDOW
ui.autoService.on("check", function (checked) {
    if (checked && auto.service == null) {
        app.startActivity({
            action: "android.settings.ACCESSIBILITY_SETTINGS"
        });
    }
    if (!checked && auto.service != null) {
        auto.service.disableSelf();
    }
});
// 当用户回到本界面时，resume事件会被触发
ui.emitter.on("resume", function () {
    // 此时根据无障碍服务的开启情况，同步开关的状态
    ui.autoService.checked = auto.service != null;
});

// 悬浮窗权限
ui.consoleshow.on("check", function (checked) {
    if (checked && !floaty.checkPermission()) {
        app.startActivity({
            packageName: "com.android.settings",
            className: "com.android.settings.Settings$AppDrawOverlaySettingsActivity",
            data: "package:" + context.getPackageName(),
        });
    }
});

// ui.log.on("click", function () {
//     app.startActivity("console");
// });//删掉了

ui.start.on("click", function () {
    //程序开始运行之前判断无障碍服务
    if (auto.service == null) {
        toast("请先开启无障碍服务！");
        return;
    } else {
        //engines.execScriptFile("main.js")
        if (ui.script_chosen.getSelectedItemPosition() == 1 && files.exists(filePathksjs)) {
            engines.execScriptFile(filePathksjs); // 快手极速
        } else if (ui.script_chosen.getSelectedItemPosition() == 2 && files.exists(filePathks)) {
            engines.execScriptFile(filePathks); // 快手
        } else if (ui.script_chosen.getSelectedItemPosition() == 0 && files.exists(filePathksjs) && files.exists(filePathks) && files.exists(filePathtime)) {
            engines.execScriptFile(filePathtime); // 互切
        } else {
            alert("请先下载脚本");
        };
    };
});

ui.exit.on("click", function () {
    home();
});

////////////////////////////////////////////////////////////////////////////ksjs
var KSJSi = 0;
var KSJS;
var filePathksjs = '/sdcard/ksjs.js';
ui.downksjs.on("click", function () {
    toastLog("开始下载KSJS脚本");
    //
    function 下载KSJS() {
        let url = [
            'https://ghproxy.com/https://raw.githubusercontent.com/zyzyz666666/ksjs/main/最新测试.js',
        ];
        for (var i = 0; i < 2; i++) {
            try {
                let res = http.get(url[i], {
                    timeout: 10000 // 设置超时时间为10秒
                });
                console.log(res.statusCode);
                if (res.statusCode == 200) {
                    KSJS = res.body.string();
                    if (KSJS.indexOf('"uii"') == 0) {
                        KSJSi = 1;
                        toastLog('快手极速版' + '下载成功✅');
                        alert('快手极速版' + '下载成功✅')
                        //log("开始加载KSJS");
                        //engines.execScript("KSJS", KSJS);
                        break;
                    };
                } else {
                    toastLog('快手极速版' + '下载链接失败❌');
                    alert('快手极速版' + '下载链接失败❌')
                }
            } catch (error) {
                if (error instanceof java.net.SocketTimeoutException) {
                    toastLog('快手极速版' + '下载超时❌');
                    alert('快手极速版' + '下载超时❌')
                    continue; // 继续下一次循环请求
                } else {
                    toastLog('快手极速版' + '下载失败❌' + error)//，错误：' + error);
                    alert('快手极速版' + '下载失败❌')
                };
            };
            if (i == 9) {
                toastLog("请重新下载");

            }
        }

    };

    threads.start(function () { // 创建新的子线程
        下载KSJS();
    });
    //
    if (KSJSi == 1) {
        toastLog("正在保存快手极速版");
        if (files.exists(filePathksjs)) {
            files.remove(filePathksjs);
        };
        files.write(filePathksjs, KSJS);
        toastLog("快手极速版 已保存");
        ui.ksjsyes.setVisibility(android.view.View.VISIBLE);
        ui.ksjsno.setVisibility(android.view.View.INVISIBLE);
    };
});
ui.downksjsf5.on("click", function () {
    if (KSJSi == 1) {
        if (files.exists(filePathksjs)) {
            files.remove(filePathksjs);
        };
        files.write(filePathksjs, KSJS);
        toastLog("快手极速版 已保存");
        ui.ksjsyes.setVisibility(android.view.View.VISIBLE);
        ui.ksjsno.setVisibility(android.view.View.INVISIBLE);
    } else if (KSJSi == 0) {
        ui.ksjsyes.setVisibility(android.view.View.INVISIBLE);
        ui.ksjsno.setVisibility(android.view.View.VISIBLE);
    };
});
ui.deleteksjs.on("click", function () {
    if (files.exists(filePathksjs)) {
        files.remove(filePathksjs);
    };
    alert('快手极速版' + '已卸载')
    KSJSi = 0;
    ui.ksjsyes.setVisibility(android.view.View.INVISIBLE);
    ui.ksjsno.setVisibility(android.view.View.VISIBLE);
});

/////////////////////////////////////////////////////////////////////////////ks
var KSi = 0;
var KS;
var filePathks = '/sdcard/ks.js';
ui.downks.on("click", function () {
    toastLog("开始下载KS脚本");
    //
    function 下载KS() {
        //
        let url = [
            'https://ghproxy.com/https://raw.githubusercontent.com/zyzyz666666/ksjs/main/测试文件',
        ];
        for (var i = 0; i < 2; i++) {
            try {
                let resks = http.get(url[i], {
                    timeout: 10000 // 设置超时时间为10秒
                });
                //console.log(res.statusCode);
                if (resks.statusCode == 200) {
                    KS = resks.body.string();
                    if (KS.indexOf('"uui"') == 0) {
                        KSi = 1;
                        toastLog('快手' + '下载成功✅');
                        alert('快手' + '下载成功✅')
                        //log("开始加载KS");
                        //engines.execScript("KS", KS);
                        break;
                    };
                } else {
                    toastLog('快手' + '下载链接失败❌');
                    alert('快手' + '下载链接失败❌')
                }
            } catch (error) {
                if (error instanceof java.net.SocketTimeoutException) {
                    toastLog('快手' + '下载超时❌');
                    alert('快手' + '下载超时❌')
                    continue; // 继续下一次循环请求
                } else {
                    toastLog('快手' + '下载失败❌' + error)//，错误：' + error);
                    alert('快手' + '下载失败❌')
                };
            };
            if (i == 9) {
                toastLog("请重新下载");

            }
        }

    };

    threads.start(function () { // 创建新的子线程
        下载KS();
    });
    //
    if (KSi == 1) {
        toastLog("正在保存快手");
        if (files.exists(filePathks)) {
            files.remove(filePathks);
        };
        files.write(filePathks, KS);
        toastLog("快手 已保存");
        ui.ksyes.setVisibility(android.view.View.VISIBLE);
        ui.ksno.setVisibility(android.view.View.INVISIBLE);
    };
});
ui.downksf5.on("click", function () {
    if (KSi == 1) {
        if (files.exists(filePathks)) {
            files.remove(filePathks);
        };
        files.write(filePathks, KS);
        toastLog("快手 已保存");
        ui.ksyes.setVisibility(android.view.View.VISIBLE);
        ui.ksno.setVisibility(android.view.View.INVISIBLE);
    } else if (KSi == 0) {
        ui.ksyes.setVisibility(android.view.View.INVISIBLE);
        ui.ksno.setVisibility(android.view.View.VISIBLE);
    };
});
ui.deleteks.on("click", function () {
    if (files.exists(filePathks)) {
        files.remove(filePathks);
    };
    alert('快手' + '已卸载')
    KSi = 0;
    ui.ksyes.setVisibility(android.view.View.INVISIBLE);
    ui.ksno.setVisibility(android.view.View.VISIBLE);
});

/////////////////////////////////////////////////////////////////////////////time
var TIMEi = 0;
var TIME;
var filePathtime = '/sdcard/time.js';
ui.downtime.on("click", function () {
    toastLog("开始下载互切脚本");
    //
    function 下载TIME() {
        //
        let url = [
            'https://ghproxy.com/https://raw.githubusercontent.com/zyzyz666666/ksjs/main/测试文件',
        ];
        for (var i = 0; i < 2; i++) {
            try {
                let restime = http.get(url[i], {
                    timeout: 10000 // 设置超时时间为10秒
                });
                //console.log(res.statusCode);
                if (restime.statusCode == 200) {
                    TIME = restime.body.string();
                    if (TIME.indexOf('"uui"') == 0) {
                        TIMEi = 1;
                        toastLog('互切' + '下载成功✅');
                        alert('互切' + '下载成功✅')
                        //log("开始加载TIME");
                        //engines.execScript("TIME", TIME);
                        break;
                    };
                } else {
                    toastLog('互切' + '下载链接失败❌');
                    alert('互切' + '下载链接失败❌')
                }
            } catch (error) {
                if (error instanceof java.net.SocketTimeoutException) {
                    toastLog('互切' + '下载超时❌');
                    alert('互切' + '下载超时❌')
                    continue; // 继续下一次循环请求
                } else {
                    toastLog('互切' + '下载失败❌' + error)//，错误：' + error);
                    alert('互切' + '下载失败❌')
                };
            };
            if (i == 9) {
                toastLog("请重新下载");

            }
        }

    };

    threads.start(function () { // 创建新的子线程
        下载TIME();
    });
    //
    if (TIMEi == 1) {
        toastLog("正在保存互切");
        if (files.exists(filePathtime)) {
            files.remove(filePathtime);
        };
        files.write(filePathtime, TIME);
        toastLog("互切 已保存");
        ui.timeyes.setVisibility(android.view.View.VISIBLE);
        ui.timeno.setVisibility(android.view.View.INVISIBLE);
    };
});
ui.downtimef5.on("click", function () {
    if (TIMEi == 1) {
        if (files.exists(filePathtime)) {
            files.remove(filePathtime);
        };
        files.write(filePathtime, TIME);
        toastLog("互切 已保存");
        ui.timeyes.setVisibility(android.view.View.VISIBLE);
        ui.timeno.setVisibility(android.view.View.INVISIBLE);
    } else if (TIMEi == 0) {
        ui.timeyes.setVisibility(android.view.View.INVISIBLE);
        ui.timeno.setVisibility(android.view.View.VISIBLE);
    };
});
ui.deletetime.on("click", function () {
    if (files.exists(filePathtime)) {
        files.remove(filePathtime);
    };
    alert('互切' + '已卸载')
    TIMEi = 0;
    ui.timeyes.setVisibility(android.view.View.INVISIBLE);
    ui.timeno.setVisibility(android.view.View.VISIBLE);
});






